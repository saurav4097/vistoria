<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>cart page</title>
    <style>
        *{
            padding:0;
            margin:0;
        }
        .bar1{
            width: 100vw;
           
            background:rgb(222, 116, 22);
            height:70px;
            display: flex;
            align-items: center;
            padding-left: 20px;
            
            p{padding-left: 20px;
                font-size:3rem;
                padding-right:50px;
                
            font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif}
            a{
                padding-right: 50;
                min-width: 100px;
                max-width: 120px;
            }
        }
        .profile{
            margin-left:40px;
            margin-right: 20px;
        }
        .cart{
            margin-left:20px;
            margin-right: 40px; 
        }
       
        .bar2{
            background-color: rgb(45, 46, 45);
            color:white;
            height: 40px;
            display: flex;
            align-items: center;
            padding-left: 30px;
            a{margin-right: 100px;}
            .menubar{margin-left: 10px;margin-right: 110px;}
        }
        
        
        
        
       
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f5f5f5;
}
 .bar4{
            height: 510px;
            background-color: rgb(32, 44, 37);
            color: aliceblue;
            .backtotop{
                height: 80px;margin-top: 100px;
                display: flex;
                justify-content: center;
                padding-top: 5px;
                background-color: rgb(50, 77, 63);
                font-size: 2rem;
            }
            .extra{
                display: flex;
                padding-left: 40px;
                font-size: 14px;
                pre{
                    margin-top: 80px;
                    margin-left: 140px;
                    a{font-weight: bolder;}
                }
            }
            .last{
                margin-top: 70px;
                display: flex;
                justify-content: center;
                font-size: 3rem;
                color: rgb(251, 250, 250);
                font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
            }
            .last2{
                margin-top: 20px;
                display: flex;
                justify-content: center;
                font-size: 0.7rem;
                color: white;
               
            }
        }
        
        /* Circular Box Styling */
        .circular-box {
            position: fixed; /* Adjust position as per your layout needs */
            top: 70px; /* Adjust as needed */
            left: 20px; /* Adjust as needed */
            width: 50px; /* Width of the circular box */
            height: 30px; /* Height of the circular box */
            
            border-radius: 20px; /* Rounded corners (if you want the box slightly rounded) */
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3); /* Add some shadow for effect */
            z-index: 1001; /* Ensure it's above other elements */
            display: flex; /* Flex to center content */
            flex-direction:column; /* Align icon on top and text below */
            justify-content: center;
            align-items: center;
            padding: 10px;
            color: rgb(18, 14, 14); /* Text color */
        }
        
        .circular-box svg {
            width: 40px; /* Adjust icon size */
            height: 40px; /* Adjust icon size */
        }
        
        .circular-box h3 {
            margin-top: 10px; /* Space between icon and text */
            font-size: 12px; /* Smaller text */
            font-weight: 400; /* Optional, to make the text lighter */
            text-align: center;
        }
        /* Container for all products */
.product-grid {
    display: flex;
    flex-direction: column;  /* Aligns items vertically */
    gap: 20px;  /* Adds vertical space between product cards */
    width: 100%;  /* Ensures full width of container */
    padding: 10px;  /* Adds some padding around the grid */
}

/* Individual product card */
.product-card {
    width: 100%;  /* Full width */
    background-color: #f9f9f9;  /* Light grey background */
    border: 1px solid #ddd;  /* Light border */
    border-radius: 8px;  /* Rounded corners */
    padding: 15px;  /* Internal padding */
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);  /* Subtle shadow for depth */
    transition: transform 0.2s ease;  /* Smooth hover effect */
}

/* Hover effect on product card */
.product-card:hover {
    transform: translateY(-5px);  /* Slight lift on hover */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);  /* More pronounced shadow on hover */
}

/* Link styles */
.product-link {
    text-decoration: none;  /* Remove underline */
    color: inherit;  /* Inherit text color */
}

/* Product details styling */
.product-details h3 {
    margin: 0;
    font-size: 1.2em;
    font-weight: bold;
    color: #333;
}

.product-details .offer {
    font-size: 1em;
    color: #ff5722;  /* Highlighted color for price */
    margin-top: 5px;
}
.product-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* Two items per row */
    gap: 20px;
    padding: 20px;
}

.product-card {
    display: flex;
    align-items: center;
    position: relative;
    border-radius: 10px;
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
    background: #fff;
    overflow: hidden;
    padding: 15px;
    width: 280px;
}

.product-image {
    width: 100px;
    height: 100px;
    background-size: cover;
    background-position: center;
    border-radius: 8px;
    flex-shrink: 0;
}

.product-details {
    flex-grow: 1;
    padding-left: 15px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    width: 100%;
}

.product-details h3 {
    margin: 0;
    font-size: 1.1rem;
    color: #333;
}

.offer {
    color: #e74c3c;
    font-weight: bold;
    position: absolute;
    bottom: 10px;
    right: 15px;
}

.quantity-control {
    display: flex;
    align-items: center;
    margin-top: 5px;
}

.quantity-control button {
    background: #007bff;
    color: #fff;
    border: none;
    padding: 5px 10px;
    cursor: pointer;
    border-radius: 5px;
    margin: 0 5px;
}

.quantity-control span {
    font-size: 1rem;
    font-weight: bold;
}

.delete-button {
    position: absolute;
    top: 10px;
    right: 10px;
    background: transparent;
    border: none;
    font-size: 1.2rem;
    cursor: pointer;
    color: red;
}
/* Bar 2 - Go Back Button */
.bar.second-bar {
    background-color: #f8f9fa;
    padding: 10px 20px;
    border-bottom: 1px solid #ddd;
  }
  
  .back-button {
    background-color: #007bff;
    color: white;
    padding: 10px 15px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 1rem;
  }
  
  .back-button:hover {
    background-color: #0056b3;
  }
  .total-container {
    margin-right: 30px;
    display: flex;
    flex-direction: column;
    align-items: flex-end; /* Align content to the right */
    text-align: right;
}

.shop-btn {
    margin-right: 25px;
    display: inline-block;
    margin-top: 10px;
    padding: 10px 15px;
    background-color: #007bff;
    color: white;
    text-decoration: none;
    border-radius: 5px;
}

.shop-btn:hover {
    background-color: #0056b3;
}



    </style>
</head>
<body>
    <!--bar 1**********************************************************-->
   <div class="bar1">
    <p>VISTORIA*</p>
   
    
    <!-- Profile Section -->
<div class="profile" style="margin-left: 800px;">
    <a href="/profile"> <!-- Wrap the icon with an anchor tag that links to the signup page -->
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-person-circle" viewBox="0 0 16 16">
            <path d="M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0"/>
            <path fill-rule="evenodd" d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8m8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1"/>
        </svg>
    </a>
</div>
<div class="cart">
    <a href="/cart"> 
  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-cart" viewBox="0 0 16 16">
    <path d="M0 1.5A.5.5 0 0 1 .5 1H2a.5.5 0 0 1 .485.379L2.89 3H14.5a.5.5 0 0 1 .491.592l-1.5 8A.5.5 0 0 1 13 12H4a.5.5 0 0 1-.491-.408L2.01 3.607 1.61 2H.5a.5.5 0 0 1-.5-.5M3.102 4l1.313 7h8.17l1.313-7zM5 12a2 2 0 1 0 0 4 2 2 0 0 0 0-4m7 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4m-7 1a1 1 0 1 1 0 2 1 1 0 0 1 0-2m7 0a1 1 0 1 1 0 2 1 1 0 0 1 0-2"/>
  </svg></a></div>
    <!--bar 2**********************************************************-->
   </div> 
   <div class="bar second-bar">
    <button class="back-button" onclick="window.location.href='/'">Go Back</button>
</div>
<!--bar 3**********************************************************-->
<div class="product-grid">
    <% if (products && products.length > 0) { %>
        <div>
        <% products.forEach(product => { %>
            <div class="product-card">
                <a href="/product/<%= product.productId %>" class="product-link">
                <div class="product-image" style='background-image: url("data:image/jpeg;base64,<%= product.imageUrl %>");'></div>
            </a>
                <div class="product-details">
                    <h3><%= product.name %></h3>
                    
                    <div class="quantity-control">
                        <button onclick="updateQuantity('<%= product.name %>', '<%= product.email %>', '<%= product.useremail %>', 'decrease')">-</button>
                        <span id="quantity-<%= product.name %>"><%= product.quantity %></span>
                        <button onclick="updateQuantity('<%= product.name %>', '<%= product.email %>', '<%= product.useremail %>', 'increase')">+</button>
                    </div>
                    
                    <p class="offer">₹<%= product.price %></p>
                </div>

                <button class="delete-button" onclick="deleteProduct('<%= product._id %>')">🗑️</button>
            </div>
        <% }) %>
        <div class="total-container">
            <h1 class="total">Total: ₹<span id="total"><%= total %></span></h1>
            <div><a href="/shoppingdetail" class="shop-btn">Shop Now</a></div>
        </div>
    </div>
    <% } else { %>
        <p>No products available</p>
    <% } %>
</div>


<!--bar 3**********************************************************-->
<div class="bar4">
    <div class="backtotop">
        <pre>     ^
Back To Top</pre>
        </div>
    <div class="extra">
    <pre><a>Get to Know Us</a>
About Us
Careers
Press Releases
Amazon Science</pre>
        <pre><a>Connect with Us</a>
Facebook
Twitter
Instagram</pre>
            <pre><a>Make Money with Us</a>
Sell on Amazon
Sell under Amazon Accelerator
 Protect and Build Your Brand
Amazon Global Selling
Become an Affiliate
Fulfilment by Amazon
Advertise Your Products
Amazon Pay on Merchants</pre>
                <pre><a>Let Us Help You</a>
COVID-19 and Amazon
Your Account
Returns Centre
Recalls and Product Safety Alerts
100% Purchase Protection
Amazon App Download
Help</pre>
</div>
<div class="last">
    <p>MyBag*</p>
</div>
<div class="last2">
    <pre>   Thank you for being our valued customer.
 We are so grateful and hope we met your expectations. </pre>
</div>
</div>
<script>
    // Add to Cart button click handler
    document.querySelectorAll('.add-to-bag').forEach(button => {
        button.addEventListener('click', function () {
            const productId = this.getAttribute('data-id');
            
            // Send AJAX request to add product to cart
            fetch('/add-to-cart/' + productId, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ productId: productId }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Product added to cart!');
                    // Optionally, update cart UI elements, like cart count
                } else {
                    alert('Failed to add product to cart');
                }
            })
            .catch(error => console.error('Error:', error));
        });
    });

    async function updateQuantity(productName, email, useremail, action) {
        try {
            const response = await fetch(`/update-quantity/${productName}/${email}/${useremail}/${action}`, { 
                method: "POST" 
            });
    
            const data = await response.json();
    
            if (!response.ok) {
                throw new Error(data.message || "Failed to update quantity");
            }
    
            if (data.success) {
                // Update quantity in UI
                document.getElementById(`quantity-${productName}`).textContent = data.newQuantity;
    
                // Update total price
                document.getElementById("total").textContent = data.newTotal;
    
                // Reload cart without navigating away
                location.reload(); 
            } else {
                alert(data.message);
            }
        } catch (error) {
            console.error("Error updating quantity:", error);
            alert("Server Error: " + error.message);
        }
    }
    
    async function deleteProduct(productId) {
        try {
            const response = await fetch(`/delete-product/${productId}`, { method: "DELETE" });
    
            const data = await response.json();
    
            if (!response.ok) {
                throw new Error(data.message || "Failed to delete product");
            }
    
            if (data.success) {
                alert("Product deleted successfully");
                location.reload(); // Refresh the page after deletion
            } else {
                alert("Error: " + data.message);
            }
        } catch (error) {
            console.error("Error deleting product:", error);
            alert("Server Error: " + error.message);
        }
    }
    
       
</script>
</body>
</body>
</html>